# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: test secrets
chart:
  version: 0.0.0
templates:
  - secrets.yaml
  - broker_deployment.yaml
values:
  - ./fixtures/default_values.yaml

tests:
  - it: Sets the name and key for scm token
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmToken: fake_token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via bitbucket pat
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: bitbucket-server-bearer-auth
      bitbucketPat: fake_token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: BITBUCKET_PAT
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via bitbucket password
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: bitbucket-server
      bitbucketPassword: fake_pwd
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: BITBUCKET_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via gitlab
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: gitlab
      scmToken: gl_token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GITLAB_TOKEN
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via azure-repos
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: azure-repos
      azureReposToken: fake_token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: AZURE_REPOS_TOKEN
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via jira
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: jira
      jiraPassword: fake_pwd
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: JIRA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via jira-pat
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: jira-bearer-auth
      jiraPat: fake_jira_pat
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: JIRA_PAT
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via cr password
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: container-registry-agent
      crType: "gcr"
      crPassword: fake_pwd
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CR_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token via cr token
    set:
      externalCredentialSecret.name: my-cool-secret
      externalCredentialSecret.key: my-cool-key
      scmType: container-registry-agent
      crType: "digitalocean-cr"
      crToken: fake_token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CR_TOKEN
            valueFrom:
              secretKeyRef:
                name: my-cool-secret
                key: my-cool-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-cool-key
        documentSelector:
          path: metadata.name
          value: my-cool-secret
        template: secrets.yaml

  - it: Sets the name and key for scm token pool
    set:
      scmTokenPoolSecret.name: my-external-pool
      scmTokenPoolSecret.key: my-pool-of-keys
      scmToken: ""
      scmTokenPool: fake_token,another_fake_token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GITHUB_TOKEN_POOL
            valueFrom:
              secretKeyRef:
                name: my-external-pool
                key: my-pool-of-keys
        template: broker_deployment.yaml
      - exists:
          path: data.my-pool-of-keys
        documentSelector:
          path: metadata.name
          value: my-external-pool
        template: secrets.yaml

  - it: Sets the name and key for artifactory secrets
    set:
      scmType: artifactory
      artifactoryUrl: artifactory.corp.io
      brokerClientValidationUrl: https://artifactory.corp.io/api/system/ping
      artifactoryUrlSecret.name: external-artifactory-url
      artifactoryUrlSecret.key: my-custom-key
      brokerClientValidationUrlSecret.name: artifactory-url-for-validation
      key: my-other-custom-key
      scmToken: ""
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ARTIFACTORY_URL
            valueFrom:
              secretKeyRef:
                name: external-artifactory-url
                key:  my-custom-key
        template: broker_deployment.yaml
      - exists:
          path: data.my-custom-key
        documentSelector:
          path: metadata.name
          value: external-artifactory-url
        template: secrets.yaml
      - exists:
          path: data.artifactory-broker-client-validation-url
        documentSelector:
          path: metadata.name
          value: artifactory-url-for-validation
        template: secrets.yaml

  - it: Rejects duplicative keys for nexus secrets
    set:
      scmType: nexus
      nexusUrl: https://user:@nexus.corp.io/repository
      baseNexusUrl: https://user:@nexus.corp.io
      brokerClientValidationUrl: https://nexus.corp.io/service/rest/v1/status/check
      nexusUrlSecret.key: private-nexus
      baseNexusUrlSecret.key: private-nexus
    asserts:
      - failedTemplate:
          errorMessage: Secret keys for nexusUrlSecret and baseNexusUrlSecret must be unique
    template: broker_deployment.yaml

  - it: Sets names for nexus secrets, retaining default keys
    set:
      scmType: nexus
      nexusUrl: https://user:@nexus.corp.io/repository
      baseNexusUrl: https://user:@nexus.corp.io
      brokerClientValidationUrl: https://nexus.corp.io/service/rest/v1/status/check
      nexusUrlSecret.name: private-nexus-url
      baseNexusUrlSecret.name: private-nexus-base-url
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEXUS_URL
            valueFrom:
              secretKeyRef:
                name: private-nexus-url
                key:  nexus-nexus-url
        template: broker_deployment.yaml
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: BASE_NEXUS_URL
            valueFrom:
              secretKeyRef:
                name: private-nexus-base-url
                key:  nexus-base-nexus-url
        template: broker_deployment.yaml
      - exists:
          path: data.nexus-base-nexus-url
        documentSelector:
          path: metadata.name
          value: private-nexus-base-url
        template: secrets.yaml
      - exists:
          path: data.nexus-nexus-url
        documentSelector:
          path: metadata.name
          value: private-nexus-url
        template: secrets.yaml

  - it: References an external tls style secret
    set:
      httpsSecret.name: "my-external-secret"
      enableBrokerLocalWebserverOverHttps: true
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: RELEASE-NAME-snyk-broker-tls-secret-volume
            secret:
              secretName: my-external-secret
        template: broker_deployment.yaml


  - it: References an external CA secret
    set:
      caCertFileSecret.name: my-ca
      caCertFileSecret.key: ca.pem
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: RELEASE-NAME-snyk-broker-cacert-volume
            secret:
              secretName: my-ca
        template: broker_deployment.yaml

  - it: handles all required secrets in one kubernetes secret
    set:
      scmType: nexus
      useExternalSecrets: true
      nexusUrlSecret.name: my-big-broker-secret
      baseNexusUrlSecret.name: my-big-broker-secret
      brokerTokenSecret.name: my-big-broker-secret
      brokerClientValidationUrlSecret.name: my-big-broker-secret
    template: broker_deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEXUS_URL
            valueFrom:
              secretKeyRef:
                name: my-big-broker-secret
                key:  nexus-nexus-url
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: BROKER_TOKEN
            valueFrom:
              secretKeyRef:
                name: my-big-broker-secret
                key:  nexus-broker-token-key
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: BASE_NEXUS_URL
            valueFrom:
              secretKeyRef:
                name: my-big-broker-secret
                key:  nexus-base-nexus-url
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: BROKER_CLIENT_VALIDATION_URL
            valueFrom:
              secretKeyRef:
                name: my-big-broker-secret
                key:  nexus-broker-client-validation-url
